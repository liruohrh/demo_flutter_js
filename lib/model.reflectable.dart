// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'model.dart' as prefix0;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Model',
            r'.Model',
            134217735,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 4, 9],
            const <int>[10, 3, 11, 12, 13, 2, 5, 6, 7, 8],
            const <int>[4],
            -1,
            {r'sHello': () => prefix0.Model.sHello},
            {},
            {r'': (bool b) => ([f1]) => b ? prefix0.Model(f1) : null},
            -1,
            -1,
            const <int>[-1],
            null,
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'f1', 67239941, 0, const prefix0.Reflector(), -1,
            -1, -1, null, null),
        r.VariableMirrorImpl(r'nested', 67239941, 0, const prefix0.Reflector(),
            0, -1, -1, null, null),
        r.MethodMirrorImpl(r'hello', 2097154, 0, -1, -1, -1, null,
            const <int>[0], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'toString', 2097154, 0, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'sHello', 2097170, 0, -1, -1, -1, null,
            const <int>[1], const prefix0.Reflector(), null),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, 5),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 0, 6),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, 7),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 1, 8),
        r.MethodMirrorImpl(r'', 0, 0, -1, -1, -1, null, const <int>[2],
            const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'==', 2097154, -1, -1, -1, -1, null, const <int>[5],
            const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'noSuchMethod', 524290, -1, -1, -1, -1, null,
            const <int>[6], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null)
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'name', 134348806, 2, const prefix0.Reflector(),
            -1, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'name', 134348806, 4, const prefix0.Reflector(),
            -1, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'f1', 67245062, 9, const prefix0.Reflector(), -1,
            -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'_f1', 67240038, 6, const prefix0.Reflector(),
            -1, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'_nested', 67240038, 8,
            const prefix0.Reflector(), 0, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'other', 134348806, 10,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'invocation', 134348806, 11,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null)
      ],
      <Type>[prefix0.Model],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'hello': (dynamic instance) => instance.hello,
        r'f1': (dynamic instance) => instance.f1,
        r'nested': (dynamic instance) => instance.nested
      },
      {
        r'f1=': (dynamic instance, value) => instance.f1 = value,
        r'nested=': (dynamic instance, value) => instance.nested = value
      },
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
